#!/bin/bash

. ./.secret

match=$1
question=$2
timestamp=$3
controversy=$4
decision=$5

if [ -z $match ]; then
   firebase --project ${project} --token ${token} database:get /v0/live-matches | jq '[. | to_entries[] | {"id": .key, "home": .value.home, "away": .value.away}]'
   echo "Enter Match ID (valid IDs above):"
   read match
fi

if [ -z $question ]; then
   echo "Enter the question you'd like to ask:"
   read question
fi

if [ -z $description ]; then
  echo "Can you give a brief description of what happened? (leave blank if you cba)"
  read description
fi

if [ -z $timestamp ]; then
   echo "Enter the match time in the format XXmin:"
   read timestamp
fi

if [ -z $decision ]; then
   echo "Was it a referee decision? [Y/n]"
   read decision

   case $decision in
      [Yy] | "" )
         echo "What was the decision? 'Yes' or 'No'."
         read decision
         ;;
      [Nn] )
         decision=""
         ;;
      *)
         echo "Assuming you meant yes..."
         echo "What was the decision? 'Yes' or 'No'."
         read decision
         ;;
   esac
fi

if [ -z $controversy ]; then
   echo "Is this controversial? [y/N]"
   read controversy

   case $controversy in
      [Yy] )
         controversy="true"
         ;;
      [Nn] | "" )
         controversy="false"
         ;;
      *)
         echo "Assuming you meant no..."
         controversy="false"
         ;;
   esac
fi

asked=$(gdate -u --rfc-3339=seconds | sed 's/ /T/')
uuid=$(uuidgen | tr 'A-Z' 'a-z')

match_json='[{"id": "'${uuid}'","asked": "'${asked}'"}]'
json='{"id": "'${uuid}'", "match": "'${match}'", "asked": "'${asked}'","decision": "'${decision}'", "description": "'${description}'", "controversial": '${controversy}', "question": "'${question}'","time": "'${timestamp}'"}'

stat_json='{"id": "'${uuid}'", "simple": {"yes": 0, "no": 0}}'

echo ${json} | jq

echo "This ok? (hit enter if yeah, hit ctrl-c if nah)"
read

echo ${json} | firebase --non-interactive --project ${project} --token ${token} database:set -y /v0/live-questions/${uuid}

if [ $? -ne 0 ]; then
  echo "ERROR: Failed to save question! Please try again (soz)."
  exit 1
fi

echo ${stat_json} | firebase --non-interactive --project ${project} --token ${token} database:set -y /v0/live-statistics/${uuid}

echo "true" | firebase --non-interactive --project ${project} --token ${token} database:set -y /v0/live-matches/${match}/live 
firebase --project ${project} --token ${token} database:get /v0/live-matches/${match}/questions | jq ". |= .+ $match_json" | firebase --non-interactive --project ${project} --token ${token} database:set -y /v0/live-matches/${match}/questions
